# Notice that ACM removes the wildcard label (*) when generating CNAME records for wildcard names.
# As a result, the CNAME record generated by ACM for a wildcard name (such as *.example.com) is the same record returned for the domain name without the wildcard label (example.com).
# see:
# - https://aws.amazon.com/certificate-manager/faqs/?nc1=h_ls
# - https://github.com/terraform-aws-modules/terraform-aws-acm/issues/3#issuecomment-487099039

data "template_file" "breakup_san" {
  count    = "${length(var.subject_alternative_names)}"
  template = "${replace(element(var.subject_alternative_names , count.index), "*.", "")}"
}

locals {
  validation = "${distinct(concat(list(var.domain_name), data.template_file.breakup_san.*.rendered))}"
}

resource "aws_acm_certificate" "this" {
  count = "${var.create_certificate}"

  domain_name               = "${var.domain_name}"
  subject_alternative_names = ["${sort(var.subject_alternative_names)}"]
  validation_method         = "${var.validation_method}"

  tags = "${var.tags}"

  lifecycle {
    create_before_destroy = true
  }
}

//data "aws_acm_certificate" "this" {
//  count = "${1 - var.create_certificate}"
//
//  domain = "${var.domain_name}"
//
//  types = ["${var.acm_certificate_types}"]
//  statuses = ["${var.acm_certificate_statuses}"]
//  most_recent = "${var.acm_certificate_most_recent}"
//}

resource "aws_route53_record" "validation" {
  count = "${var.create_certificate && var.validation_method == "DNS" && var.validate_certificate ? length(local.validation) : 0}"

  zone_id = "${var.zone_id}"
  name    = "${lookup(aws_acm_certificate.this.domain_validation_options[count.index], "resource_record_name")}"
  type    = "${lookup(aws_acm_certificate.this.domain_validation_options[count.index], "resource_record_type")}"
  ttl     = 60

  records = [
    "${lookup(aws_acm_certificate.this.domain_validation_options[count.index], "resource_record_value")}",
  ]
}

resource "aws_acm_certificate_validation" "this" {
  count = "${var.create_certificate && var.validation_method == "DNS" && var.validate_certificate && var.wait_for_validation ? 1 : 0}"

  certificate_arn = "${aws_acm_certificate.this.arn}"

  validation_record_fqdns = [
    "${aws_route53_record.validation.*.fqdn}",
  ]
}
